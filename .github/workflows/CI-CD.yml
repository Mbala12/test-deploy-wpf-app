name: Build and Release WPF App

on:
  push:
    branches: [main]   

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x' # or your version

      - name: Restore NuGet packages
        run: dotnet restore

      - name: Build the WPF application
        run: dotnet build WpfMVVMProject.sln --configuration Release

      - name: Publish app (self-contained Windows build)
        run: dotnet publish WpfMVVMProject/WpfMVVMProject.csproj -c Release -r win-x64 --self-contained -o publish

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: WPFApp
          path: publish/

      - name: Generate tag name
        id: tag
        shell: pwsh
        run: |
          $date = Get-Date -Format "yyyy-MM-dd"
          $tag = "${{ github.ref_name }}-$date-${{ github.run_number }}"
          echo "tag_name=$tag" >> $env:GITHUB_OUTPUT

      - uses: actions/checkout@v3

      - name: Fetch tags
        run: git fetch --tags

      - name: Check if tag exists
        id: tag_exists
        shell: pwsh
        run: |
          $tag = "${{ steps.tag.outputs.tag_name }}"
          $exists = git ls-remote --tags origin $tag
          if ($exists) {
            echo "exists=true" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
          } else {
            echo "exists=false" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
          }
      
      - name: Configure Git
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${PAT_TOKEN}@github.com/${{ github.repository }}.git
      
      - name: Create and push tag with retries
        if: steps.tag_exists.outputs.exists == 'false'
        shell: pwsh
        run: |
          $tag = "${{ steps.tag.outputs.tag_name }}"
          $maxRetries = 3
          $count = 0
          do {
            try {
              Write-Host "Attempting to push tag: $tag (try $($count + 1))"
              git tag $tag
              git push origin $tag
              Write-Host "Tag pushed successfully."
              break
            }
            catch {
              $count++
              Write-Host "Push failed. Retry attempt $count..."
              Start-Sleep -Seconds (5*$count)
            }
          } while ($count -lt $maxRetries)
          
          if ($count -eq $maxRetries) {
            throw "Failed to push tag after $maxRetries attempts"
          }
      
      - name: Create GitHub Release
        if: steps.tag_exists.outputs.exists == 'false'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.tag_name }}
          name: "Release ${{ steps.tag.outputs.tag_name }}"
          files: publish/**/*
